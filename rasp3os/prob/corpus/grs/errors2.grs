Kim_NP1 cannot_VM abide_VV0 her_PPHO1
(ncsubj abide Kim _)
(aux abide cannot)
(dobj abide her)

Several_DA2 of_IO the_AT children_NN2 had_VHD been_VBN sexually_RR abused_VVN
(ncsubj abused Several _)
(aux abused had)
(ncmod _ abused sexually)
(aux abused been)
(passive abused)
(ncmod _ Several of)
(dobj of children)
(det children the)

Nothing_PN1 we_PPIS2 can_VM do_VD0 will_VM help_VV0
(ncsubj help Nothing _)
(aux help will)
(cmod _ Nothing do)
(ncsubj do we _)
(aux do can)

Why_RRQ is_VBZ it_PPH1 that_CST it_PPH1 rains_VVZ all_DB the_AT time_NNT1 in_II England_NP1 ?_?
(arg_mod _ is Why)
(xcomp _ is it)
(cmod that it rains)
(ncsubj rains it _)
(ncmod _ rains in)
(dobj in England)
(ncmod _ rains time)
(ncmod part time all)
(det time the)

If_CS necessary_JJ ,_, we_PPIS2 will_VM leave_VV0
(cmod _ leave If)
(ncsubj leave we _)
(aux leave will)
(dobj If necessary)

We_PPIS2 will_VM leave_VV0 if_CS necessary_JJ
(ncsubj leave We _)
(cmod _ leave if)
(dobj if necessary)
(aux leave will)

Can_VM you_PPY account_VV0 for_IF how_RGQ it_PPH1 happened_VVD ?_?
(aux account Can)
(ncsubj account you _)
(ccomp _ account for)
(ccomp _ for happened)
(arg_mod _ happened how)
(ncsubj happened it _)

He_PPHS1 aimed_VVD for_IF the_AT shoulder_NN1 ,_, not_XX the_AT heart_NN1
(ta comma aimed heart)
(ncmod _ heart not)
(det heart the)
(ncsubj aimed He _)
(iobj aimed for)
(dobj for shoulder)
(det shoulder the)

How_RGQ many_DA2 members_NN2 does_VDZ he_PPHS1 have_VH0 ?_?
(ncmod _ have How)
(aux have does)
(ncsubj have he _)
(dobj How members)
(ncmod _ members many)

There_EX is_VBZ no_AT choice_NN1 but_CCB to_TO amputate_VV0
(ncsubj but There _)
(conj but is)
(conj but amputate)
(xcomp _ is choice)
(det choice no)

The_AT Prime_NNSB1 Minister_NNS1 resigned_VVD
(ncsubj resigned Minister _)
(det Minister The)
(ncmod _ Minister Prime)

I_PPIS1 ca_VM n't_XX answer_VV0 (_( you_PPY )_) without_IW information_NN1
(ncsubj answer I _)
(aux answer ca)
(ncmod _ answer n't)
(iobj answer without)
(dobj without information)
(ta bal answer you)

He_PPHS1 appeared_VVD (_( to_TO be_VB0 )_) calm_NN1
(ncsubj appeared He _)
(dobj appeared calm)
(ta brack calm be)

The_AT rate_NN1 is_VBZ lower_JJR than_CSN last_MD month_NNT1 's_$
(ncsubj is rate _)
(xcomp _ is lower)
(ncmod _ lower than)
(dobj than last)
(ncmod poss ellip last)
(ncmod _ last month)
(det rate The)

It_PPH1 appears_VVZ as_CSA though_CS I_PPIS1 was_VBDZ wrong_JJ
(ncsubj appears It _)
(pcomp appears as)
(ccomp _ as though)
(ccomp _ though was)
(ncsubj was I _)
(xcomp _ was wrong)

Let_VV0 's_PPIO2 assume_VV0 he_PPHS1 is_VBZ wrong_JJ
(ccomp _ Let assume)
(ncsubj assume 's _)
(ccomp _ assume is)
(ncsubj is he _)
(xcomp _ is wrong)

Being_VBG on_II his_APP$ own_DA ,_, he_PPHS1 hid_VVD
(xmod _ hid Being)
(ncsubj hid he _)
(pcomp Being on)
(dobj on own)
(det own his)

Do_VD0 n't_XX listen_VV0 to_II others_NN2 -_- try_VV0 thinking_NN1
(ta end listen try)
(dobj try thinking)
(aux listen Do)
(ncmod _ listen n't)
(iobj listen to)
(dobj to others)

By_II the_AT time_NNT1 the_AT letter_NN1 reached_VVD them_PPHO2 their_APP$ sister_NN1 had_VHD died_VVN
(ncmod _ died By)
(ncsubj died sister _)
(aux died had)
(det sister their)
(dobj By time)
(det time the)
(ccomp _ time reached)
(ncsubj reached letter _)
(dobj reached them)
(det letter the)

Being_VBG bored_VVN is_VBZ something_PN1 she_PPHS1 ca_VM n't_XX bear_VV0
(xsubj is bored _)
(xcomp _ is something)
(cmod _ something bear)
(ncsubj bear she _)
(aux bear ca)
(ncmod _ bear n't)
(aux bored Being)
(passive bored)

The_AT meeting_NN1 began_VVD promisingly_RR ,_, but_CCB then_RR things_NN2 started_VVD to_TO go_VV0 wrong_JJ
(conj but began)
(conj but started)
(ncmod _ started then)
(ncsubj started things _)
(xcomp to started go)
(xcomp _ go wrong)
(ncsubj began meeting _)
(ncmod _ began promisingly)
(det meeting The)

These_DD2 changes_NN2 always_RR bite_VV0 the_AT elderly_JJ hard_JJ
(ncsubj bite changes _)
(ncmod _ bite always)
(xcomp _ bite hard)
(ncsubj hard elderly _)
(dobj bite elderly _)
(det elderly the)
(det changes These)

The_AT interior_NN1 of_IO the_AT house_NNL1 is_VBZ still_RR blackened_VVN from_II the_AT fire_NN1 /_CC smoke_NN1
(ncsubj blackened interior _)
(ncmod _ blackened still)
(aux blackened is)
(passive blackened)
(iobj blackened from)
(dobj from /)
(det / the)
(conj / fire)
(conj / smoke)
(det interior The)
(iobj interior of)
(dobj of house)
(det house the)

He_PPHS1 did_VDD not_XX want_VV0 to_TO get_VB0 involved_VVN
(ncsubj want He _)
(aux want did)
(ncmod _ want not)
(xcomp to want involved)
(aux involved get)
(passive involved)

Blend_VV0 the_AT ingredients_NN2 together_RR
(ncmod _ Blend together)
(dobj Blend ingredients)
(det ingredients the)

They_PPHS2 blew_VVD the_AT other_JB team_NN1 away_RL in_II the_AT second_MD half_DB
(ncsubj blew They _)
(ncmod _ blew in)
(dobj in second)
(ncmod _ second half)
(det second the)
(dobj blew team)
(ncmod prt blew away)
(det team the)
(ncmod _ team other)

I_PPIS1 thought_VVD that_CST after_ICS a_AT1 few_DA2 months_NNT2 the_AT argument_NN1 would_VM blow_VV0 over_RP
(ncsubj thought I _)
(ccomp that thought blow)
(ncmod _ blow after)
(ncmod _ blow months)
(ncsubj blow argument _)
(aux blow would)
(ncmod prt blow over)
(det argument the)
(dobj after few)
(det few a)

He_PPHS1 sure_RR blew_VVD his_APP$ cool_JJ
(ncsubj blew He _)
(ncmod _ blew sure)
(dobj blew cool)
(det cool his)

Your_APP$ knee_NN1 ca_VM n't_XX hurt_VV0 that_RG much_DA1
(ncsubj hurt knee _)
(aux hurt ca)
(ncmod _ hurt n't)
(xcomp _ hurt much)
(ncmod _ much that)
(det knee Your)

That_DD1 was_VBDZ a_AT1 really_RR stupid_JJ thing_NN1 to_TO do_VD0 ,_, you_PPY blundering_JJ idiot_NN1 !_!
(ta voc was you)
(ncmod _ you idiot)
(ncmod _ you blundering)
(ncsubj was That _)
(xcomp _ was thing)
(det thing a)
(ncmod _ thing stupid)
(xmod to thing do)
(ncmod _ stupid really)

She_PPHS1 blushes_VVZ furiously_RR whenever_CS she_PPHS1 sees_VVZ him_PPHO1
(ncsubj blushes She _)
(cmod _ blushes whenever)
(ccomp _ whenever sees)
(ncsubj sees she _)
(dobj sees him)
(ncmod _ blushes furiously)

She_PPHS1 bobbed_VVD (_( a_AT1 curtsy_NN1 )_) to_II the_AT Queen_NP1
(ncsubj bobbed She _)
(ncmod _ bobbed to)
(dobj to Queen)
(det Queen the)
(ta bal bobbed curtsy)
(det curtsy a)

The_AT journalist_NN1 boiled_VVN down_RP his_APP$ lengthy_JJ report_NN1 to_II just_RR a_AT1 few_DA2 paragraphs_NN2
(ncsubj boiled journalist _)
(iobj boiled to)
(dobj boiled report)
(dobj to paragraphs)
(ncmod _ paragraphs just)
(ncmod _ paragraphs few)
(det few a)
(det report his)
(ncmod _ report lengthy)
(ncmod prt boiled down)
(det journalist The)

This_DD1 pub_NN1 was_VBDZ bombed_VVN a_AT1 few_DA2 years_NNT2 ago_RA
(ncsubj bombed pub _)
(ncmod _ bombed years)
(ncmod _ years ago)
(ncmod _ years few)
(det few a)
(aux bombed was)
(passive bombed)
(det pub This)

The_AT gap_NN1 between_II the_AT unemployed_JJ and_CC employers_NN2 who_PNQS need_VV0 workers_NN2 widened_VVD
(ncsubj widened gap _)
(det gap The)
(ncmod _ gap between)
(dobj between and)
(conj and unemployed)
(conj and employers)
(cmod _ employers need)
(ncsubj need who _)
(dobj need workers)
(det unemployed the)

The_AT jury_NN1 brought_VVN in_II a_AT1 verdict_NN1 of_IO not_XX guilty_JJ
(ncsubj brought jury _)
(iobj brought in)
(dobj in verdict)
(det verdict a)
(iobj verdict of)
(dobj of guilty)
(ncmod _ guilty not)
(det jury The)

She_PPHS1 snogged_VVD the_AT bishop_NN1 a_AT1 lot_NN1
(ncsubj snogged She _)
(obj2 snogged lot)
(dobj snogged bishop)
(det lot a)
(det bishop the)

He_PPHS1 need_VM not_XX have_VH0 gone_VVN
(ncsubj gone He _)
(aux gone need)
(ncmod _ gone not)
(aux gone have)

It_PPH1 was_VBDZ Ovitz_NP1 who_PNQS brokered_VVD the_AT multi-billion_NN1 dollar_NN1 deal_NN1
(ncsubj was It _)
(xcomp _ was Ovitz)
(cmod _ Ovitz brokered)
(ncsubj brokered who _)
(dobj brokered deal)
(det deal the)
(ncmod _ deal multi-billion)
(ncmod _ deal dollar)

He_PPHS1 would_VM brook_VV0 no_AT disagreement_NN1
(ncsubj brook He _)
(aux brook would)
(dobj brook disagreement)
(det disagreement no)

Houses_NNL2 were_VBDR built_VVN to_TO last_VV0 a_AT1 few_DA2 years_NNT2 ago_RA
(ncsubj built Houses _)
(aux built were)
(passive built)
(xcomp to built last)
(ncmod _ last years)
(ncmod _ years ago)
(ncmod _ years few)
(det few a)

Quit_VV0 bullshitting_JJ ,_, will_VM you_PPY ?_?
(ncsubj will you _)
(ta tag Quit will)
(xcomp _ Quit bullshitting)

Unable_JJ to_TO escape_VV0 ,_, six_MC people_NN were_VBDR burnt_VVN alive_JJ
(ncmod _ burnt Unable)
(ncsubj burnt people _)
(aux burnt were)
(passive burnt)
(xcomp _ burnt alive)
(ncmod num people six)
(xcomp to Unable escape)

I_PPIS1 am_VBM a_AT1 bit_NN1 busy_JJ
(ncsubj am I _)
(xcomp _ am busy)
(det busy a)
(ncmod _ busy bit)

Do_VD0 the_AT best_NN1 you_PPY can_VM
(dobj Do best)
(det best the)
(ccomp _ best can)
(ncsubj can you _)

Can_VV0 it_PPH1 ,_, please_VV0
(ta end Can please)
(dobj Can it)

Did_VDD he_PPHS1 see_VV0 it_PPH1 coming_VVG ?_?
(aux see Did)
(ncsubj see he _)
(ccomp _ see coming)
(ncsubj coming it _)

My_APP$ legs_NN2 wo_VM n't_XX carry_VV0 me_PPIO1 any_DD further_JJR
(ncsubj carry legs _)
(aux carry wo)
(ncmod _ carry n't)
(obj2 carry further)
(dobj carry me)
(det further any)
(det legs My)

I_PPIS1 will_VM live_VV0 for_IF ever_NNT1
(ncsubj live I _)
(ncmod _ live for)
(dobj for ever)
(aux live will)

We_PPIS2 cannot_VM employ_VV0 people_NN who_PNQS do_VD0 n't_XX work_VV0 as_CSA hard_JJ as_CSA they_PPHS2 should_VM
(ncsubj employ We _)
(aux employ cannot)
(dobj employ people)
(cmod _ people work)
(ncsubj work who _)
(aux work do)
(ncmod _ work n't)
(xcomp _ work as)
(xcomp _ as hard)
(ccomp _ hard should)
(ncsubj should as inv)
(dobj as they)

The_AT ice_NN1 is_VBZ two_MC inches_NNU2 thick_JJ
(ncsubj is ice _)
(xcomp _ is inches)
(ncmod _ inches thick)
(ncmod _ inches two)
(det ice The)

He_PPHS1 looked_VVD about_RP ,_, as_CSA if_CS he_PPHS1 were_VBDR casing_VVG the_AT joint_NN1
(pmod looked as)
(ccomp _ as if)
(ccomp _ if casing)
(ncsubj casing he _)
(aux casing were)
(dobj casing joint)
(det joint the)
(ncsubj looked He _)
(ncmod prt looked about)

In_II case_NN1 he_PPHS1 comes_VVZ ,_, we_PPIS2 will_VM leave_VV0
(ncmod _ leave In)
(ncsubj leave we _)
(aux leave will)
(dobj In case)
(ccomp _ case comes)
(ncsubj comes he _)

Her_APP$ attitude_NN1 has_VHZ changed_VVN for_IF the_AT better_JJR
(ncsubj changed attitude _)
(aux changed has)
(iobj changed for)
(dobj for better)
(det better the)
(det attitude Her)

You_PPY look_VV0 great_JJ as_CSA you_PPY are_VBR
(ncsubj look You _)
(cmod _ look as)
(ccomp _ as are)
(ncsubj are you _)
(xcomp _ look great)

I_PPIS1 'll_VM change_VV0 into_II something_PN1 a_AT1 bit_NN1 smarter_JJR
(ncsubj change I _)
(aux change 'll)
(iobj change into)
(dobj change smarter)
(det smarter a)
(ncmod _ smarter bit)
(dobj into something)

What_DDQ if_CS you_PPY 'd_VHD had_VHN your_APP$ passport_NN1 stolen_VVN as_CSA well_RR as_CSA your_APP$ money_NN1 !_!
(ccomp _ What if)
(ccomp _ if had)
(ncsubj had you _)
(aux had 'd)
(passive stolen)
(ncsubj stolen passport obj)
(dobj had passport)
(xcomp _ stolen as)
(xcomp _ as well)
(ncmod _ well as)
(dobj as money)
(det money your)
(det passport your)

His_APP$ country_NN1 was_VBDZ a_AT1 free_JJ country_NN1 and_CC would_VM always_RR remain_VV0 so_RG
(ncsubj and country _)
(conj and was)
(conj and remain)
(ncmod _ remain so)
(ncmod _ remain always)
(aux remain would)
(xcomp _ was country)
(det country a)
(ncmod _ country free)
(det country His)

Turn_VV0 the_AT music_NN1 down_II a_AT1 little_DA1
(iobj Turn down)
(dobj Turn music)
(dobj down little)
(det little a)
(det music the)

The_AT work_NN1 that_CST the_AT students_NN2 do_VD0 during_II the_AT year_NNT1 will_VM count_VV0
(ncsubj count work _)
(aux count will)
(det work The)
(ccomp that work do)
(ncsubj do students _)
(ncmod _ do during)
(dobj during year)
(det year the)
(det students the)

Women_NN2 often_RR devalue_VV0 themselves_PPX2 ,_, she_PPHS1 said_VVD
(ta end devalue said)
(ncsubj said she _)
(ncsubj devalue Women _)
(ncmod _ devalue often)
(dobj devalue themselves)

The_AT government_NN1 ought_VMK to_TO be_VB0 doing_NN1 more_DAR to_TO help_VV0 the_AT homeless_JJ
(ncsubj be government _)
(ncmod prt ought to)
(aux be ought)
(xcomp _ be doing)
(xmod to doing help)
(ncmod _ help more)
(dobj help homeless)
(det homeless the)
(det government The)

She_PPHS1 tried_VVD to_TO palm_VV0 her_APP$ old_JJ car_NN1 off_RP on_II me_PPIO1
(ncsubj tried She _)
(xcomp to tried palm)
(iobj palm on)
(ncmod prt palm off)
(dobj palm car)
(dobj on me)
(det car her)
(ncmod _ car old)

He_PPHS1 is_VBZ smart_JJ enough_RGA to_TO come_VV0
(ncsubj is He _)
(xcomp _ is smart)
(xcomp to smart come)
(ncmod _ come enough)

He_PPHS1 ate_VVD so_RG many_DA2 sweets_NN2 that_CST he_PPHS1 was_VBDZ sick_JJ
(ncsubj ate He _)
(dobj ate sweets)
(ncmod _ sweets many)
(ccomp that sweets was)
(ncsubj was he _)
(xcomp _ was sick)
(ncmod _ many so)

If_CS he_PPHS1 sat_VVD in_II the_AT pond_NN1 he_PPHS1 would_VM get_VB0 sick_JJ
(cmod _ get If)
(ncsubj get he _)
(aux get would)
(xcomp _ get sick)
(ccomp _ If sat)
(ncsubj sat he _)
(iobj sat in)
(dobj in pond)
(det pond the)

Again_RR and_CC again_RR he_PPHS1 smiled_VVD
(ncmod _ smiled and)
(ncsubj smiled he _)
(conj and Again)
(conj and again)

No_AT more_DAR than_CSN 21_MC were_VBDR lost_VVN
(ncsubj lost more _)
(aux lost were)
(passive lost)
(det more No)
(ncmod _ more than)
(dobj than 21)

The_AT penning_VVG in_RP of_IO the_AT cattle_NN2 was_VBDZ difficult_JJ
(ncsubj was penning _)
(ncsubj was : _)
(xcomp _ was difficult)
(det : The)
(det penning The)
(iobj penning of)
(dobj of cattle)
(det cattle the)
(ncmod prt penning in)

He_PPHS1 is_VBZ in_II a_AT1 mood_NN1 to_TO cause_VV0 trouble_NN1
(ncsubj is He _)
(pcomp is in)
(ccomp _ in mood)
(ncsubj cause mood _)
(dobj cause trouble)
(det mood a)

Trouble_NN1 free_JJ long_JJ life_NN1 quality_NN1 components_NN2 are_VBR better_RRR
(ncsubj are components _)
(ncmod _ are better)
(ncmod _ components free)
(ncmod _ components long)
(ncmod _ components life)
(ncmod _ components quality)
(ncmod _ free Trouble)

It_PPH1 is_VBZ hard_JJ to_TO imagine_VV0 how_RGQ things_NN2 could_VM be_VB0 worse_JJR
(ncsubj is It _)
(xcomp _ is hard)
(xcomp to hard imagine)
(ccomp _ imagine be)
(arg_mod _ be how)
(ncsubj be things _)
(aux be could)
(xcomp _ be worse)

He_PPHS1 moved_VVD from_II rung_NN1 to_II rung_NN1 until_ICS he_PPHS1 reached_VVD the_AT top_NN
(ncsubj moved He _)
(cmod _ moved until)
(ccomp _ until reached)
(ncsubj reached he _)
(dobj reached top)
(det top the)
(iobj moved to)
(iobj moved from)
(dobj to rung)
(dobj from rung)

Is_VBZ this_DD1 the_AT wrong_JJ moment_NNT1 to_TO raise_VV0 such_DA an_AT1 issue_NN1 ?_?
(xcomp _ Is moment)
(ncsubj Is this _)
(det moment the)
(ncmod _ moment wrong)
(obj raise moment)
(xmod to moment raise)
(dobj raise issue)
(det issue an)
(det issue such)

It_PPH1 is_VBZ a_AT1 problem_NN1 akin_JA to_II one_PN1 we_PPIS2 solved_VVD many_DA2 years_NNT2 ago_RA
(ncsubj is It _)
(ncmod _ is years)
(ncmod _ years ago)
(ncmod _ years many)
(xcomp _ is problem)
(ncmod _ problem akin)
(ncmod _ akin to)
(dobj to one)
(cmod _ one solved)
(ncsubj solved we _)
(det problem a)

Work_NN1 is_VBZ a_AT1 drug_NN1 ,_, success_NN1 is_VBZ a_AT1 stimulus_NN1 to_TO work_VV0 ,_, and_CC we_PPIS2 are_VBR all_RR addicted_VVN
(conj and is)
(conj and is)
(conj and addicted)
(ncsubj addicted we _)
(ncmod _ addicted all)
(aux addicted are)
(passive addicted)
(ncsubj is success _)
(xcomp _ is stimulus)
(det stimulus a)
(xmod to stimulus work)
(ncsubj is Work _)
(xcomp _ is drug)
(det drug a)

He_PPHS1 flew_VVD from_II the_AT airport_NNL1 to_II the_AT oil_NN1 field_NN1
(ncsubj flew He _)
(iobj flew to)
(iobj flew from)
(dobj to field)
(det field the)
(ncmod _ field oil)
(dobj from airport)
(det airport the)

He_PPHS1 offered_VVD Kim_NP1 a_AT1 job_NN1 but_CCB Sandy_NP1 nearly_RR had_VHN a_AT1 fit_JJ
(conj but offered)
(conj but had)
(ncsubj had Sandy _)
(ncmod _ had nearly)
(dobj had fit)
(det fit a)
(ncsubj offered He _)
(obj2 offered job)
(dobj offered Kim)
(det job a)

He_PPHS1 tried_VVD to_TO establish_VV0 controls_NN2 that_CST were_VBDR more_DAR or_CC less_DAR effective_JJ
(ncsubj tried He _)
(xcomp to tried establish)
(dobj establish controls)
(ncsubj were controls _)
(cmod that controls were)
(xcomp _ were effective)
(ncmod _ effective or)
(conj or more)
(conj or less)

It_PPH1 is_VBZ made_VVN up_RP of_IO three_MC pieces_NN2
(ncsubj made It _)
(aux made is)
(passive made)
(iobj made of)
(dobj of pieces)
(ncmod num pieces three)
(ncmod prt made up)

Have_VH0 a_AT1 clear_VV0 out_RP or_CC hold_VV0 a_AT1 coffee_NN1 morning_NNT1
(conj or Have)
(conj or hold)
(ncmod _ hold morning)
(det morning a)
(ncmod _ morning coffee)
(dobj Have clear)
(ncmod prt clear out)
(det clear a)

He_PPHS1 helped_VVD look_NN1 after_ICS them_PPHO2
(ncsubj helped He _)
(dobj helped look)
(ncmod _ look after)
(dobj after them)

A_AT1 dog_NN1 is_VBZ an_AT1 animal_NN1 with_IW four_MC legs_NN2
(ncsubj is dog _)
(xcomp _ is animal)
(det animal an)
(ncmod _ animal with)
(dobj with legs)
(ncmod num legs four)
(det dog A)

The_AT North_ND1 American_JJ frog_NN1 is_VBZ horrid_JJ
(ncsubj is frog _)
(xcomp _ is horrid)
(det frog The)
(ncmod _ frog American)
(ncmod _ American North)

I_PPIS1 do_VD0 n't_XX know_VV0 what_DDQ they_PPHS2 are_VBR
(ncsubj know I _)
(aux know do)
(ncmod _ know n't)
(ccomp _ know are)
(obj are what _)
(ncsubj are they _)

I_PPIS1 can_VM remember_VV0 how_RGQ I_PPIS1 used_VMK to_TO be_VB0
(ncsubj remember I _)
(aux remember can)
(ccomp _ remember be)
(arg_mod _ be how)
(ncsubj be I _)
(ncmod prt used to)
(aux be used)

I_PPIS1 did_VDD n't_XX tell_VV0 you_PPY what_DDQ Kim_NP1 thought_VVD
(ncsubj tell I _)
(aux tell did)
(ncmod _ tell n't)
(ccomp _ tell thought)
(dobj tell you)
(obj thought what _)
(ncsubj thought Kim _)

I_PPIS1 want_VV0 you_PPY to_TO show_VV0 me_PPIO1 where_RRQ the_AT car_NN1 went_VVD off_RP
(ncsubj want I _)
(ccomp _ want went)
(dobj want you)
(arg_mod _ went where)
(ncsubj went car _)
(ncmod prt went off)
(det car the)
(arg show you)
(xmod to you show)
(dobj show me)

It_PPH1 depends_VVZ whether_CSW you_PPY think_VV0 about_II what_DDQ you_PPY 're_VBR seeing_VVG
(ncsubj depends It _)
(ccomp _ depends whether)
(ccomp _ whether think)
(ncsubj think you _)
(ccomp _ think about)
(ccomp _ about seeing)
(obj seeing what _)
(ncsubj seeing you _)
(aux seeing 're)

Sandy_NP1 stood_VVD wondering_VVG what_DDQ their_APP$ relationship_NN1 was_VBDZ
(ncsubj stood Sandy _)
(xcomp _ stood wondering)
(ccomp _ wondering was)
(obj was what _)
(ncsubj was relationship _)
(det relationship their)

I_PPIS1 would_VM tell_VV0 them_PPHO2 where_RRQ to_TO go_VV0
(ncsubj tell I _)
(aux tell would)
(xcomp _ tell where)
(dobj tell them)
(xcomp to where go)

You_PPY must_VM understand_VV0 how_RGQ to_TO check_VV0 their_APP$ accuracy_NN1 at_II recognized_VVN stages_NN2
(ncsubj understand You _)
(aux understand must)
(xcomp _ understand how)
(xcomp to how check)
(iobj check at)
(dobj check accuracy)
(dobj at stages)
(passive recognized)
(ncsubj recognized stages obj)
(ncmod _ stages recognized)
(det accuracy their)

It_PPH1 made_VVD him_PPHO1 a_AT1 little_DA1 sick_JJ ,_, and_CC he_PPHS1 let_VVD go_VV0 of_IO her_PPHO1
(conj and made)
(conj and let)
(ncsubj let he _)
(xcomp _ let go)
(iobj go of)
(dobj of her)
(ncsubj made It _)
(obj2 made little)
(dobj made him)
(det little a)
(ncmod _ little sick)

It_PPH1 was_VBDZ hotter_JJR and_CC drier_JJR ,_, but_CCB the_AT grass_NN1 was_VBDZ better_RRR
(conj but was)
(conj but was)
(ncsubj was grass _)
(ncmod _ was better)
(det grass the)
(ncsubj was It _)
(xcomp _ was and)
(conj and hotter)
(conj and drier)

As_CSA can_VM be_VB0 seen_VVN ,_, the_AT results_NN2 are_VBR good_JJ
(ta end seen are)
(ncsubj are results _)
(xcomp _ are good)
(det results the)
(ncsubj seen As inv)
(aux seen can)
(aux seen be)
(passive seen)

His_APP$ car_NN1 is_VBZ especially_RR noteworthy_JJ
(ncsubj is car _)
(xcomp _ is noteworthy)
(ncmod _ noteworthy especially)
(det car His)

